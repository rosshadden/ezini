{"version":3,"sources":["../../test/ezini.test.js"],"names":["ini","require","fs","path","iniFolder","join","dirname","__filename","objINI","owner","name","organization","database","server","port","file","strINI","readFileSync","resolve","__dirname","describe","it","parseSync","should","eql","str","obj","JSON","parse","stringify","author","isRich","portStr","done","rich","richStr","stringifySync","equal","foo","bar"],"mappings":"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","file":"ezini.test.js","sourcesContent":["const ini = require(\"../ezini\")\nconst fs = require(\"fs\")\nconst path = require(\"path\")\nrequire(\"should\")\n\nconst iniFolder = path.join(path.dirname(__filename), \"ini\")\n\nconst objINI = { owner: { name: \"John Do\", organization: \"Acme eProducts\" },\n\tdatabase: { server: \"192.0.2.42\", port: 143, file: \"acme payroll.dat\" } }\nconst strINI = fs.readFileSync(path.resolve(__dirname, \"ini/standard.ini\"), \"utf-8\")\n\ndescribe('empty str parsing', () => {\n\tit('output should equal an empty Object', () => {\n\t\tini.parseSync(\"\").should.eql({})\n\t});\n});\n\ndescribe(\"empty line ini parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"empty_line.ini\"), \"utf-8\")\n\t\tini.parseSync(str).should.eql(objINI)\n\t})\n})\n\ndescribe(\"commented ini parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"commented.ini\"), \"utf-8\")\n\t\tini.parseSync(str).should.eql(objINI)\n\t})\n})\n\ndescribe(\"inline-commented ini parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"inline_commented.ini\"), \"utf-8\")\n\t\tini.parseSync(str).should.eql(objINI)\n\t})\n})\n\ndescribe(\"commented ini with empty line parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"commented_empty_line.ini\"), \"utf-8\")\n\t\tini.parseSync(str).should.eql(objINI)\n\t})\n})\n\ndescribe(\"start with properties ini parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"start_with_properties.ini\"), \"utf-8\")\n\t\tconst obj = JSON.parse(JSON.stringify(objINI))\n\t\tobj.author = \"vimsucks\"\n\t\tini.parseSync(str).should.eql(obj)\n\t})\n})\n\ndescribe(\"ini syntax error parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"syntax_error.ini\"), \"utf-8\")\n\t\tini.parseSync(str).should.eql(objINI)\n\t})\n})\n\ndescribe(\"ini with boolean value parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"boolean.ini\"), \"utf-8\")\n\t\tconst obj = JSON.parse(JSON.stringify(objINI))\n\t\tobj.owner.isRich = true\n\t\tini.parseSync(str).should.eql(obj)\n\t})\n})\n\ndescribe(\"ini with quoted number parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"quoted_number.ini\"), \"utf-8\")\n\t\tconst obj = JSON.parse(JSON.stringify(objINI))\n\t\tobj.database.portStr = \"143\"\n\t\tini.parseSync(str).should.eql(obj)\n\t})\n})\n\ndescribe(\"ini with quoted boolean parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"quoted_boolean.ini\"), \"utf-8\")\n\t\tconst obj = JSON.parse(JSON.stringify(objINI))\n\t\tobj.owner.isRich = \"true\"\n\t\tini.parseSync(str).should.eql(obj)\n\t})\n})\n\ndescribe(\"empty line ini async parsing\", () => {\n\tit(\"output object should equal given object\", (done) => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"empty_line.ini\"), \"utf-8\")\n\t\tini.parse(str, (obj) => {\n\t\t\tobj.should.eql(objINI)\n\t\t\tdone()\n\t\t})\n\t})\n})\n\ndescribe(\"composite str parsing\", () => {\n\tit(\"output object should equal given object\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"composite.ini\"), \"utf-8\")\n\t\tconst obj = JSON.parse(JSON.stringify(objINI))\n\t\tobj.owner.rich = true\n\t\tobj.owner.richStr = \"true\"\n\t\tobj.database.portStr = \"143\"\n\t\tini.parseSync(str).should.eql(obj)\n\t})\n})\n\ndescribe(\"parsed object stringify\", () => {\n\tit(\"output string should equal given string\", () => {\n\t\tini.stringifySync(objINI).should.equal(strINI)\n\t})\n})\n\ndescribe(\"parsed start-with-properties object stringify\", () => {\n\tit(\"output string should equal given string\", () => {\n\t\tconst str = fs.readFileSync(path.join(iniFolder, \"start_with_properties.ini\"), \"utf-8\")\n\t\tini.stringifySync(ini.parseSync(str)).should.equal(`author=vimsucks\\n${strINI}`)\n\t})\n})\n\ndescribe(\"parsed object async stringify\", () => {\n\tit(\"output string should equal given string\", (done) => {\n\t\tini.stringify(objINI, (str) => {\n\t\t\tstr.should.equal(strINI)\n\t\t\tdone()\n\t\t})\n\t})\n})\n\ndescribe(\"object with quoted number & boolean async stringify\", () => {\n\tit(\"output string should equal given string\", (done) => {\n\t\tconst obj = JSON.parse(JSON.stringify(objINI))\n\t\tobj.database.foo = \"true\"\n\t\tobj.database.bar = \"123\"\n\t\tini.stringify(obj, (str) => {\n\t\t\tstr.should.equal(`${strINI}foo=\"true\"\\nbar=\"123\"\\n`)\n\t\t\tdone()\n\t\t})\n\t})\n})\n"]}