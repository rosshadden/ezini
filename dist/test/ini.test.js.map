{"version":3,"sources":["../../test/ini.test.js"],"names":["ini","require","fs","path","should","ini_folder","join","dirname","__filename","parsedINI","owner","name","organization","database","server","port","file","strINI","describe","it","str","readFileSync","parse","eql","obj","JSON","stringify","author","equal"],"mappings":"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","file":"ini.test.js","sourcesContent":["\"use strict\"\nconst ini = require(\"../ini\"),\n    fs = require(\"fs\"),\n    path = require(\"path\"),\n    should = require(\"should\")\n\nvar ini_folder = path.join(path.dirname(__filename), \"ini\")\n\nvar parsedINI = { owner: { name: 'John Do', organization: 'Acme eProducts' },\n    database: { server: '192.0.2.42', port: '143', file: 'acme payroll.dat' } }\n\nvar strINI =\"[owner]\\n\\\nname=John Do\\n\\\norganization=Acme eProducts\\n\\\n\\n\\\n[database]\\n\\\nserver=192.0.2.42\\n\\\nport=143\\n\\\nfile=acme payroll.dat\"\n\ndescribe(\"empty line ini parsing\", () => {\n    it(\"output object should equal given object\", () => {\n        var str = fs.readFileSync(path.join(ini_folder, \"empty_line.ini\"), \"utf-8\")\n        ini.parse(str).should.eql(parsedINI)\n    })\n})\n\ndescribe(\"commented ini parsing\", () => {\n    it(\"output object should equal given object\", () => {\n        var str = fs.readFileSync(path.join(ini_folder, \"commented.ini\"), \"utf-8\")\n        ini.parse(str).should.eql(parsedINI)\n    })\n})\n\ndescribe(\"inline-commented ini parsing\", () => {\n    it(\"output object should equal given object\", () => {\n        var str = fs.readFileSync(path.join(ini_folder, \"inline_commented.ini\"), \"utf-8\")\n        ini.parse(str).should.eql(parsedINI)\n    })\n})\n\ndescribe(\"commented ini with empty line parsing\", () => {\n    it(\"output object should equal given object\", () => {\n        var str = fs.readFileSync(path.join(ini_folder, \"commented_empty_line.ini\"), \"utf-8\")\n        ini.parse(str).should.eql(parsedINI)\n    })\n})\n\ndescribe(\"start with properties ini parsing\", () => {\n    it(\"output object should equal given object\", () => {\n        var str = fs.readFileSync(path.join(ini_folder, \"start_with_properties.ini\"), \"utf-8\")\n        var obj = JSON.parse(JSON.stringify(parsedINI))\n        obj.author=\"vimsucks\"\n        ini.parse(str).should.eql(obj)\n    })\n})\n\ndescribe(\"ini syntax error parsing\", () => {\n    it(\"output object should equal given object\", () => {\n        var str = fs.readFileSync(path.join(ini_folder, \"syntax_error.ini\"), \"utf-8\")\n        ini.parse(str).should.eql(parsedINI)\n    })\n})\n\ndescribe(\"parsed object stringify\", () => {\n    it(\"output string should equal given string\", () => {\n        ini.stringify(parsedINI).should.equal(strINI)\n    })\n})\n\ndescribe(\"parsed start-with-properties object stringify\", () => {\n    it(\"output string should equal given string\", () => {\n        var str = fs.readFileSync(path.join(ini_folder, \"start_with_properties.ini\"), \"utf-8\")\n        ini.stringify(ini.parse(str)).should.equal(\"author=vimsucks\\n\" + strINI)\n    })\n})\n"]}